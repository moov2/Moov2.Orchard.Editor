/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

(function () {
    var KEY_ESC = 27,
        UPLOAD_MEDIA_URL = '/Admin/Editor/Media';

    var hasInit = false,
        editorInstance, instanceId,
        $element, $contentCss;

    /**
     * Store DOM elements in variables.
     */
    var cacheDom = function () {
        $element = document.querySelector('.js-editor-medium-element');
        $contentCss = document.querySelector('.js-editor-custom-css');
    };

    /**
     * Gets the value.
     */
    var getValue = function () {
        return editorInstance.serialize()[editorInstance.elements[0].id].value;
    };
    
    /**
     * Initialises Medium editor.
     */
    var initialise = function (data) {
        data.value = addExtraParagraph(data.value);
        $element.value = data.value;
        editorInstance = new MediumEditor($element);

        editorInstance.subscribe('editableInput', sendUpdate);

        if ($contentCss.value !== '') {
            editorInstance.elements[0].className += ' ' + $contentCss.value;
        }

        $($element).mediumInsert({
            editor: editorInstance,
            addons: {
                images: false,
                embeds: false,
                orchardMedia: true
            }
        });

        hasInit = true;
    };

    /**
     * Process message from the parent window.
     */
    
    var onMessage = function (e) {
        var data = JSON.parse(e.data);

        instanceId = data.id;

        if (data.action === 'update') {
            receivedUpdate(data);
        }
    };

    /**
     * Receives a message from parent window to update value.
     */
    var receivedUpdate = function (data) {
        if (!hasInit) {
            initialise(data);
            setFocus();
            return;
        }

        data.value = addExtraParagraph(data.value);

        editorInstance.setContent(data.value);
        setFocus();
    };

    /**
     * Sends message to parent window.
     */
    var sendMessage = function (msg) {
        window.parent.postMessage(msg, '*');
    };

    /**
     * Sends message to parent window to update value.
     */
    var sendUpdate = function () {
        sendMessage({
            action: 'update',
            id: instanceId,
            value: getValue()
        });
    };

    /**
     * Set focus on medium editor
     */
    var setFocus = function () {
        if(!editorInstance) {
            return;
        }

        editorInstance.selectElement(editorInstance.elements[0]);
        MediumEditor.selection.moveCursor(document, editorInstance.elements[0], 0);
    };

    /**
     * Add extra paragraph if needed
     */
    var addExtraParagraph = function (value) {
        if(value.length > 0 && !value.endsWith('</p>')) {
            value = value + '<p><br /></p>';
        }

        return value;
    };
    
    document.addEventListener('DOMContentLoaded', cacheDom);
    window.addEventListener('message', onMessage);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yY2hhcmQubWVkaXVtLmVtYmVkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxBQUxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJvcmNoYXJkLm1lZGl1bS5lbWJlZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgS0VZX0VTQyA9IDI3LFxyXG4gICAgICAgIFVQTE9BRF9NRURJQV9VUkwgPSAnL0FkbWluL0VkaXRvci9NZWRpYSc7XHJcblxyXG4gICAgdmFyIGhhc0luaXQgPSBmYWxzZSxcclxuICAgICAgICBlZGl0b3JJbnN0YW5jZSwgaW5zdGFuY2VJZCxcclxuICAgICAgICAkZWxlbWVudCwgJGNvbnRlbnRDc3M7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTdG9yZSBET00gZWxlbWVudHMgaW4gdmFyaWFibGVzLlxyXG4gICAgICovXHJcbiAgICB2YXIgY2FjaGVEb20gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtZWRpdG9yLW1lZGl1bS1lbGVtZW50Jyk7XHJcbiAgICAgICAgJGNvbnRlbnRDc3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtZWRpdG9yLWN1c3RvbS1jc3MnKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSB2YWx1ZS5cclxuICAgICAqL1xyXG4gICAgdmFyIGdldFZhbHVlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBlZGl0b3JJbnN0YW5jZS5zZXJpYWxpemUoKVtlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXS5pZF0udmFsdWU7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIEluaXRpYWxpc2VzIE1lZGl1bSBlZGl0b3IuXHJcbiAgICAgKi9cclxuICAgIHZhciBpbml0aWFsaXNlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICBkYXRhLnZhbHVlID0gYWRkRXh0cmFQYXJhZ3JhcGgoZGF0YS52YWx1ZSk7XHJcbiAgICAgICAgJGVsZW1lbnQudmFsdWUgPSBkYXRhLnZhbHVlO1xyXG4gICAgICAgIGVkaXRvckluc3RhbmNlID0gbmV3IE1lZGl1bUVkaXRvcigkZWxlbWVudCk7XHJcblxyXG4gICAgICAgIGVkaXRvckluc3RhbmNlLnN1YnNjcmliZSgnZWRpdGFibGVJbnB1dCcsIHNlbmRVcGRhdGUpO1xyXG5cclxuICAgICAgICBpZiAoJGNvbnRlbnRDc3MudmFsdWUgIT09ICcnKSB7XHJcbiAgICAgICAgICAgIGVkaXRvckluc3RhbmNlLmVsZW1lbnRzWzBdLmNsYXNzTmFtZSArPSAnICcgKyAkY29udGVudENzcy52YWx1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICQoJGVsZW1lbnQpLm1lZGl1bUluc2VydCh7XHJcbiAgICAgICAgICAgIGVkaXRvcjogZWRpdG9ySW5zdGFuY2UsXHJcbiAgICAgICAgICAgIGFkZG9uczoge1xyXG4gICAgICAgICAgICAgICAgaW1hZ2VzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGVtYmVkczogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBvcmNoYXJkTWVkaWE6IHRydWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBoYXNJbml0ID0gdHJ1ZTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQcm9jZXNzIG1lc3NhZ2UgZnJvbSB0aGUgcGFyZW50IHdpbmRvdy5cclxuICAgICAqL1xyXG4gICAgXHJcbiAgICB2YXIgb25NZXNzYWdlID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UoZS5kYXRhKTtcclxuXHJcbiAgICAgICAgaW5zdGFuY2VJZCA9IGRhdGEuaWQ7XHJcblxyXG4gICAgICAgIGlmIChkYXRhLmFjdGlvbiA9PT0gJ3VwZGF0ZScpIHtcclxuICAgICAgICAgICAgcmVjZWl2ZWRVcGRhdGUoZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlY2VpdmVzIGEgbWVzc2FnZSBmcm9tIHBhcmVudCB3aW5kb3cgdG8gdXBkYXRlIHZhbHVlLlxyXG4gICAgICovXHJcbiAgICB2YXIgcmVjZWl2ZWRVcGRhdGUgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgIGlmICghaGFzSW5pdCkge1xyXG4gICAgICAgICAgICBpbml0aWFsaXNlKGRhdGEpO1xyXG4gICAgICAgICAgICBzZXRGb2N1cygpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBkYXRhLnZhbHVlID0gYWRkRXh0cmFQYXJhZ3JhcGgoZGF0YS52YWx1ZSk7XHJcblxyXG4gICAgICAgIGVkaXRvckluc3RhbmNlLnNldENvbnRlbnQoZGF0YS52YWx1ZSk7XHJcbiAgICAgICAgc2V0Rm9jdXMoKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIHBhcmVudCB3aW5kb3cuXHJcbiAgICAgKi9cclxuICAgIHZhciBzZW5kTWVzc2FnZSA9IGZ1bmN0aW9uIChtc2cpIHtcclxuICAgICAgICB3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKG1zZywgJyonKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIHBhcmVudCB3aW5kb3cgdG8gdXBkYXRlIHZhbHVlLlxyXG4gICAgICovXHJcbiAgICB2YXIgc2VuZFVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZW5kTWVzc2FnZSh7XHJcbiAgICAgICAgICAgIGFjdGlvbjogJ3VwZGF0ZScsXHJcbiAgICAgICAgICAgIGlkOiBpbnN0YW5jZUlkLFxyXG4gICAgICAgICAgICB2YWx1ZTogZ2V0VmFsdWUoKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCBmb2N1cyBvbiBtZWRpdW0gZWRpdG9yXHJcbiAgICAgKi9cclxuICAgIHZhciBzZXRGb2N1cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZighZWRpdG9ySW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWRpdG9ySW5zdGFuY2Uuc2VsZWN0RWxlbWVudChlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXSk7XHJcbiAgICAgICAgTWVkaXVtRWRpdG9yLnNlbGVjdGlvbi5tb3ZlQ3Vyc29yKGRvY3VtZW50LCBlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXSwgMCk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWRkIGV4dHJhIHBhcmFncmFwaCBpZiBuZWVkZWRcclxuICAgICAqL1xyXG4gICAgdmFyIGFkZEV4dHJhUGFyYWdyYXBoID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgaWYodmFsdWUubGVuZ3RoID4gMCAmJiAhdmFsdWUuZW5kc1dpdGgoJzwvcD4nKSkge1xyXG4gICAgICAgICAgICB2YWx1ZSA9IHZhbHVlICsgJzxwPjxiciAvPjwvcD4nO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGNhY2hlRG9tKTtcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgb25NZXNzYWdlKTtcclxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
