/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

(function () {
    var KEY_ESC = 27,
        UPLOAD_MEDIA_URL = '/Admin/Editor/Media';

    var hasInit = false,
        editorInstance, instanceId,
        $element, $contentCss;

    /**
     * Add extra paragraph if needed
     */
    var addExtraParagraph = function (value) {
        if(!value || !value.endsWith('</p>')) {
            value = value + '<p><br /></p>';
        }

        return value;
    };

    /**
     * Store DOM elements in variables.
     */
    var cacheDom = function () {
        $element = document.querySelector('.js-editor-medium-element');
        $contentCss = document.querySelector('.js-editor-custom-css');
    };

    /**
     * Gets the value.
     */
    var getValue = function () {
        return editorInstance.serialize()[editorInstance.elements[0].id].value;
    };
    
    /**
     * Initialises Medium editor.
     */
    var initialise = function (data) {
        data.value = addExtraParagraph(data.value);
        $element.value = data.value;
        editorInstance = new MediumEditor($element);

        editorInstance.subscribe('editableInput', sendUpdate);

        if ($contentCss.value !== '') {
            editorInstance.elements[0].className += ' ' + $contentCss.value;
        }

        $($element).mediumInsert({
            editor: editorInstance,
            addons: {
                images: false,
                embeds: false,
                orchardMedia: true
            }
        });

        hasInit = true;
    };

    /**
     * Process message from the parent window.
     */
    
    var onMessage = function (e) {
        var data = JSON.parse(e.data);

        instanceId = data.id;

        if (data.action === 'update') {
            receivedUpdate(data);
        }
    };

    /**
     * Receives a message from parent window to update value.
     */
    var receivedUpdate = function (data) {
        var isEmpty = data.value === '';

        if (!hasInit) {
            initialise(data);
        }

        data.value = addExtraParagraph(data.value);
        editorInstance.setContent(data.value);

        if (isEmpty) {
            setFocus();
        }
    };

    /**
     * Sends message to parent window.
     */
    var sendMessage = function (msg) {
        window.parent.postMessage(msg, '*');
    };

    /**
     * Sends message to parent window to update value.
     */
    var sendUpdate = function () {
        sendMessage({
            action: 'update',
            id: instanceId,
            value: getValue()
        });
    };

    /**
     * Set focus on medium editor
     */
    var setFocus = function () {
        if(!editorInstance) {
            return;
        }

        editorInstance.selectElement(editorInstance.elements[0]);
        MediumEditor.selection.moveCursor(document, editorInstance.elements[0], 0);
    };
    
    document.addEventListener('DOMContentLoaded', cacheDom);
    window.addEventListener('message', onMessage);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yY2hhcmQubWVkaXVtLmVtYmVkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxBQUxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoib3JjaGFyZC5tZWRpdW0uZW1iZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIEtFWV9FU0MgPSAyNyxcclxuICAgICAgICBVUExPQURfTUVESUFfVVJMID0gJy9BZG1pbi9FZGl0b3IvTWVkaWEnO1xyXG5cclxuICAgIHZhciBoYXNJbml0ID0gZmFsc2UsXHJcbiAgICAgICAgZWRpdG9ySW5zdGFuY2UsIGluc3RhbmNlSWQsXHJcbiAgICAgICAgJGVsZW1lbnQsICRjb250ZW50Q3NzO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWRkIGV4dHJhIHBhcmFncmFwaCBpZiBuZWVkZWRcclxuICAgICAqL1xyXG4gICAgdmFyIGFkZEV4dHJhUGFyYWdyYXBoID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgaWYoIXZhbHVlIHx8ICF2YWx1ZS5lbmRzV2l0aCgnPC9wPicpKSB7XHJcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWUgKyAnPHA+PGJyIC8+PC9wPic7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RvcmUgRE9NIGVsZW1lbnRzIGluIHZhcmlhYmxlcy5cclxuICAgICAqL1xyXG4gICAgdmFyIGNhY2hlRG9tID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICRlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWVkaXRvci1tZWRpdW0tZWxlbWVudCcpO1xyXG4gICAgICAgICRjb250ZW50Q3NzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWVkaXRvci1jdXN0b20tY3NzJyk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgdmFsdWUuXHJcbiAgICAgKi9cclxuICAgIHZhciBnZXRWYWx1ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gZWRpdG9ySW5zdGFuY2Uuc2VyaWFsaXplKClbZWRpdG9ySW5zdGFuY2UuZWxlbWVudHNbMF0uaWRdLnZhbHVlO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXNlcyBNZWRpdW0gZWRpdG9yLlxyXG4gICAgICovXHJcbiAgICB2YXIgaW5pdGlhbGlzZSA9IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgZGF0YS52YWx1ZSA9IGFkZEV4dHJhUGFyYWdyYXBoKGRhdGEudmFsdWUpO1xyXG4gICAgICAgICRlbGVtZW50LnZhbHVlID0gZGF0YS52YWx1ZTtcclxuICAgICAgICBlZGl0b3JJbnN0YW5jZSA9IG5ldyBNZWRpdW1FZGl0b3IoJGVsZW1lbnQpO1xyXG5cclxuICAgICAgICBlZGl0b3JJbnN0YW5jZS5zdWJzY3JpYmUoJ2VkaXRhYmxlSW5wdXQnLCBzZW5kVXBkYXRlKTtcclxuXHJcbiAgICAgICAgaWYgKCRjb250ZW50Q3NzLnZhbHVlICE9PSAnJykge1xyXG4gICAgICAgICAgICBlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXS5jbGFzc05hbWUgKz0gJyAnICsgJGNvbnRlbnRDc3MudmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkKCRlbGVtZW50KS5tZWRpdW1JbnNlcnQoe1xyXG4gICAgICAgICAgICBlZGl0b3I6IGVkaXRvckluc3RhbmNlLFxyXG4gICAgICAgICAgICBhZGRvbnM6IHtcclxuICAgICAgICAgICAgICAgIGltYWdlczogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBlbWJlZHM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgb3JjaGFyZE1lZGlhOiB0cnVlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaGFzSW5pdCA9IHRydWU7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUHJvY2VzcyBtZXNzYWdlIGZyb20gdGhlIHBhcmVudCB3aW5kb3cuXHJcbiAgICAgKi9cclxuICAgIFxyXG4gICAgdmFyIG9uTWVzc2FnZSA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKGUuZGF0YSk7XHJcblxyXG4gICAgICAgIGluc3RhbmNlSWQgPSBkYXRhLmlkO1xyXG5cclxuICAgICAgICBpZiAoZGF0YS5hY3Rpb24gPT09ICd1cGRhdGUnKSB7XHJcbiAgICAgICAgICAgIHJlY2VpdmVkVXBkYXRlKGRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWNlaXZlcyBhIG1lc3NhZ2UgZnJvbSBwYXJlbnQgd2luZG93IHRvIHVwZGF0ZSB2YWx1ZS5cclxuICAgICAqL1xyXG4gICAgdmFyIHJlY2VpdmVkVXBkYXRlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICB2YXIgaXNFbXB0eSA9IGRhdGEudmFsdWUgPT09ICcnO1xyXG5cclxuICAgICAgICBpZiAoIWhhc0luaXQpIHtcclxuICAgICAgICAgICAgaW5pdGlhbGlzZShkYXRhKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGRhdGEudmFsdWUgPSBhZGRFeHRyYVBhcmFncmFwaChkYXRhLnZhbHVlKTtcclxuICAgICAgICBlZGl0b3JJbnN0YW5jZS5zZXRDb250ZW50KGRhdGEudmFsdWUpO1xyXG5cclxuICAgICAgICBpZiAoaXNFbXB0eSkge1xyXG4gICAgICAgICAgICBzZXRGb2N1cygpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIHBhcmVudCB3aW5kb3cuXHJcbiAgICAgKi9cclxuICAgIHZhciBzZW5kTWVzc2FnZSA9IGZ1bmN0aW9uIChtc2cpIHtcclxuICAgICAgICB3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKG1zZywgJyonKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIHBhcmVudCB3aW5kb3cgdG8gdXBkYXRlIHZhbHVlLlxyXG4gICAgICovXHJcbiAgICB2YXIgc2VuZFVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZW5kTWVzc2FnZSh7XHJcbiAgICAgICAgICAgIGFjdGlvbjogJ3VwZGF0ZScsXHJcbiAgICAgICAgICAgIGlkOiBpbnN0YW5jZUlkLFxyXG4gICAgICAgICAgICB2YWx1ZTogZ2V0VmFsdWUoKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCBmb2N1cyBvbiBtZWRpdW0gZWRpdG9yXHJcbiAgICAgKi9cclxuICAgIHZhciBzZXRGb2N1cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZighZWRpdG9ySW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWRpdG9ySW5zdGFuY2Uuc2VsZWN0RWxlbWVudChlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXSk7XHJcbiAgICAgICAgTWVkaXVtRWRpdG9yLnNlbGVjdGlvbi5tb3ZlQ3Vyc29yKGRvY3VtZW50LCBlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXSwgMCk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgY2FjaGVEb20pO1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBvbk1lc3NhZ2UpO1xyXG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
