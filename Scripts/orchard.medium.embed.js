/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

(function () {
    var KEY_ESC = 27,
        UPLOAD_MEDIA_URL = '/Admin/Editor/Media';

    var hasInit = false,
        editorInstance, instanceId,
        $element, $contentCss;

    /**
     * Store DOM elements in variables.
     */
    var cacheDom = function () {
        $element = document.querySelector('.js-editor-medium-element');
        $contentCss = document.querySelector('.js-editor-custom-css');
    };

    /**
     * Gets the value.
     */
    var getValue = function () {
        return editorInstance.serialize()[editorInstance.elements[0].id].value;
    };
    
    /**
     * Initialises Medium editor.
     */
    var initialise = function (data) {
        data.value = addExtraParagraph(data.value);
        $element.value = data.value;
        editorInstance = new MediumEditor($element);

        editorInstance.subscribe('editableInput', sendUpdate);

        if ($contentCss.value !== '') {
            editorInstance.elements[0].className += ' ' + $contentCss.value;
        }

        $($element).mediumInsert({
            editor: editorInstance,
            addons: {
                images: false,
                embeds: false,
                orchardMedia: true
            }
        });

        hasInit = true;
    };

    /**
     * Process message from the parent window.
     */
    
    var onMessage = function (e) {
        var data = JSON.parse(e.data);

        instanceId = data.id;

        if (data.action === 'update') {
            receivedUpdate(data);
        }
    };

    /**
     * Receives a message from parent window to update value.
     */
    var receivedUpdate = function (data) {
        if (!hasInit) {
            initialise(data);
            setFocus();
            return;
        }

        data.value = addExtraParagraph(data.value);

        editorInstance.setContent(data.value);
        setFocus();
    };

    /**
     * Sends message to parent window.
     */
    var sendMessage = function (msg) {
        window.parent.postMessage(msg, '*');
    };

    /**
     * Sends message to parent window to update value.
     */
    var sendUpdate = function () {
        sendMessage({
            action: 'update',
            id: instanceId,
            value: getValue()
        });
    };

    /**
     * Set focus on medium editor
     */
    var setFocus = function () {
        if(!editorInstance) {
            return;
        }

        editorInstance.selectElement(editorInstance.elements[0]);
        MediumEditor.selection.moveCursor(document, editorInstance.elements[0], 0);
    };

    /**
     * Add extra paragraph if needed
     */
    var addExtraParagraph = function (value) {
        if(value.length > 0 && !value.endsWith('</p>')) {
            value = value + '<p><br /></p>';
        }

        return value;
    };
    
    document.addEventListener('DOMContentLoaded', cacheDom);
    window.addEventListener('message', onMessage);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yY2hhcmQubWVkaXVtLmVtYmVkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxBQUxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJvcmNoYXJkLm1lZGl1bS5lbWJlZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoKSB7XG4gICAgdmFyIEtFWV9FU0MgPSAyNyxcbiAgICAgICAgVVBMT0FEX01FRElBX1VSTCA9ICcvQWRtaW4vRWRpdG9yL01lZGlhJztcblxuICAgIHZhciBoYXNJbml0ID0gZmFsc2UsXG4gICAgICAgIGVkaXRvckluc3RhbmNlLCBpbnN0YW5jZUlkLFxuICAgICAgICAkZWxlbWVudCwgJGNvbnRlbnRDc3M7XG5cbiAgICAvKipcbiAgICAgKiBTdG9yZSBET00gZWxlbWVudHMgaW4gdmFyaWFibGVzLlxuICAgICAqL1xuICAgIHZhciBjYWNoZURvbSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuanMtZWRpdG9yLW1lZGl1bS1lbGVtZW50Jyk7XG4gICAgICAgICRjb250ZW50Q3NzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWVkaXRvci1jdXN0b20tY3NzJyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHZhbHVlLlxuICAgICAqL1xuICAgIHZhciBnZXRWYWx1ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGVkaXRvckluc3RhbmNlLnNlcmlhbGl6ZSgpW2VkaXRvckluc3RhbmNlLmVsZW1lbnRzWzBdLmlkXS52YWx1ZTtcbiAgICB9O1xuICAgIFxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpc2VzIE1lZGl1bSBlZGl0b3IuXG4gICAgICovXG4gICAgdmFyIGluaXRpYWxpc2UgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICBkYXRhLnZhbHVlID0gYWRkRXh0cmFQYXJhZ3JhcGgoZGF0YS52YWx1ZSk7XG4gICAgICAgICRlbGVtZW50LnZhbHVlID0gZGF0YS52YWx1ZTtcbiAgICAgICAgZWRpdG9ySW5zdGFuY2UgPSBuZXcgTWVkaXVtRWRpdG9yKCRlbGVtZW50KTtcblxuICAgICAgICBlZGl0b3JJbnN0YW5jZS5zdWJzY3JpYmUoJ2VkaXRhYmxlSW5wdXQnLCBzZW5kVXBkYXRlKTtcblxuICAgICAgICBpZiAoJGNvbnRlbnRDc3MudmFsdWUgIT09ICcnKSB7XG4gICAgICAgICAgICBlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXS5jbGFzc05hbWUgKz0gJyAnICsgJGNvbnRlbnRDc3MudmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICAkKCRlbGVtZW50KS5tZWRpdW1JbnNlcnQoe1xuICAgICAgICAgICAgZWRpdG9yOiBlZGl0b3JJbnN0YW5jZSxcbiAgICAgICAgICAgIGFkZG9uczoge1xuICAgICAgICAgICAgICAgIGltYWdlczogZmFsc2UsXG4gICAgICAgICAgICAgICAgZW1iZWRzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBvcmNoYXJkTWVkaWE6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgaGFzSW5pdCA9IHRydWU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFByb2Nlc3MgbWVzc2FnZSBmcm9tIHRoZSBwYXJlbnQgd2luZG93LlxuICAgICAqL1xuICAgIFxuICAgIHZhciBvbk1lc3NhZ2UgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UoZS5kYXRhKTtcblxuICAgICAgICBpbnN0YW5jZUlkID0gZGF0YS5pZDtcblxuICAgICAgICBpZiAoZGF0YS5hY3Rpb24gPT09ICd1cGRhdGUnKSB7XG4gICAgICAgICAgICByZWNlaXZlZFVwZGF0ZShkYXRhKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZWNlaXZlcyBhIG1lc3NhZ2UgZnJvbSBwYXJlbnQgd2luZG93IHRvIHVwZGF0ZSB2YWx1ZS5cbiAgICAgKi9cbiAgICB2YXIgcmVjZWl2ZWRVcGRhdGUgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICBpZiAoIWhhc0luaXQpIHtcbiAgICAgICAgICAgIGluaXRpYWxpc2UoZGF0YSk7XG4gICAgICAgICAgICBzZXRGb2N1cygpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZGF0YS52YWx1ZSA9IGFkZEV4dHJhUGFyYWdyYXBoKGRhdGEudmFsdWUpO1xuXG4gICAgICAgIGVkaXRvckluc3RhbmNlLnNldENvbnRlbnQoZGF0YS52YWx1ZSk7XG4gICAgICAgIHNldEZvY3VzKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNlbmRzIG1lc3NhZ2UgdG8gcGFyZW50IHdpbmRvdy5cbiAgICAgKi9cbiAgICB2YXIgc2VuZE1lc3NhZ2UgPSBmdW5jdGlvbiAobXNnKSB7XG4gICAgICAgIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UobXNnLCAnKicpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIHBhcmVudCB3aW5kb3cgdG8gdXBkYXRlIHZhbHVlLlxuICAgICAqL1xuICAgIHZhciBzZW5kVXBkYXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBzZW5kTWVzc2FnZSh7XG4gICAgICAgICAgICBhY3Rpb246ICd1cGRhdGUnLFxuICAgICAgICAgICAgaWQ6IGluc3RhbmNlSWQsXG4gICAgICAgICAgICB2YWx1ZTogZ2V0VmFsdWUoKVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2V0IGZvY3VzIG9uIG1lZGl1bSBlZGl0b3JcbiAgICAgKi9cbiAgICB2YXIgc2V0Rm9jdXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmKCFlZGl0b3JJbnN0YW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZWRpdG9ySW5zdGFuY2Uuc2VsZWN0RWxlbWVudChlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXSk7XG4gICAgICAgIE1lZGl1bUVkaXRvci5zZWxlY3Rpb24ubW92ZUN1cnNvcihkb2N1bWVudCwgZWRpdG9ySW5zdGFuY2UuZWxlbWVudHNbMF0sIDApO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBZGQgZXh0cmEgcGFyYWdyYXBoIGlmIG5lZWRlZFxuICAgICAqL1xuICAgIHZhciBhZGRFeHRyYVBhcmFncmFwaCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICBpZih2YWx1ZS5sZW5ndGggPiAwICYmICF2YWx1ZS5lbmRzV2l0aCgnPC9wPicpKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHZhbHVlICsgJzxwPjxiciAvPjwvcD4nO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGNhY2hlRG9tKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIG9uTWVzc2FnZSk7XG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
