/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

(function () {
    var KEY_ESC = 27,
        UPLOAD_MEDIA_URL = '/Admin/Editor/Media';

    var hasInit = false,
        editorInstance, instanceId,
        $element, $contentCss;

    /**
     * Store DOM elements in variables.
     */
    var cacheDom = function () {
        $element = document.querySelector('.js-editor-medium-element');
        $contentCss = document.querySelector('.js-editor-custom-css');
    };

    /**
     * Gets the value.
     */
    var getValue = function () {
        return editorInstance.serialize()[editorInstance.elements[0].id].value;
    };
    
    /**
     * Initialises Medium editor.
     */
    var initialise = function (data) {
        data.value = addExtraParagraph(data.value);
        $element.value = data.value;
        editorInstance = new MediumEditor($element);

        editorInstance.subscribe('editableInput', sendUpdate);

        if ($contentCss.value !== '') {
            editorInstance.elements[0].className += ' ' + $contentCss.value;
        }

        $($element).mediumInsert({
            editor: editorInstance,
            addons: {
                images: false,
                embeds: false,
                orchardMedia: true
            }
        });

        hasInit = true;
    };

    /**
     * Process message from the parent window.
     */
    var onMessage = function (e) {
        var data = JSON.parse(e.data);

        instanceId = data.id;

        if (data.action === 'update') {
            receivedUpdate(data);
        }
    };

    /**
     * Receives a message from parent window to update value.
     */
    var receivedUpdate = function (data) {
        if (!hasInit) {
            initialise(data);
            setFocus();
            return;
        }

        data.value = addExtraParagraph(data.value);

        editorInstance.setContent(data.value);
        setFocus();
    };

    /**
     * Sends message to parent window.
     */
    var sendMessage = function (msg) {
        window.parent.postMessage(msg, '*');
    };

    /**
     * Sends message to parent window to update value.
     */
    var sendUpdate = function () {
        sendMessage({
            action: 'update',
            id: instanceId,
            value: getValue()
        });
    };

    /**
     * Set focus on medium editor
     */
    var setFocus = function () {
        if(!editorInstance) {
            return;
        }

        editorInstance.selectElement(editorInstance.elements[0]);
        MediumEditor.selection.moveCursor(document, editorInstance.elements[0], 0);
    };

    /**
     * Add extra paragraph if needed
     */
    var addExtraParagraph = function (value) {
        if(value.length > 0 && !value.endsWith('</p>')) {
            value = value + '<p><br /></p>';
        }

        return value;
    };
    
    document.addEventListener('DOMContentLoaded', cacheDom);
    window.addEventListener('message', onMessage);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yY2hhcmQubWVkaXVtLmVtYmVkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxBQUxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoib3JjaGFyZC5tZWRpdW0uZW1iZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xuICAgIHZhciBLRVlfRVNDID0gMjcsXG4gICAgICAgIFVQTE9BRF9NRURJQV9VUkwgPSAnL0FkbWluL0VkaXRvci9NZWRpYSc7XG5cbiAgICB2YXIgaGFzSW5pdCA9IGZhbHNlLFxuICAgICAgICBlZGl0b3JJbnN0YW5jZSwgaW5zdGFuY2VJZCxcbiAgICAgICAgJGVsZW1lbnQsICRjb250ZW50Q3NzO1xuXG4gICAgLyoqXG4gICAgICogU3RvcmUgRE9NIGVsZW1lbnRzIGluIHZhcmlhYmxlcy5cbiAgICAgKi9cbiAgICB2YXIgY2FjaGVEb20gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICRlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWVkaXRvci1tZWRpdW0tZWxlbWVudCcpO1xuICAgICAgICAkY29udGVudENzcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5qcy1lZGl0b3ItY3VzdG9tLWNzcycpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSB2YWx1ZS5cbiAgICAgKi9cbiAgICB2YXIgZ2V0VmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBlZGl0b3JJbnN0YW5jZS5zZXJpYWxpemUoKVtlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXS5pZF0udmFsdWU7XG4gICAgfTtcbiAgICBcbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXNlcyBNZWRpdW0gZWRpdG9yLlxuICAgICAqL1xuICAgIHZhciBpbml0aWFsaXNlID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgZGF0YS52YWx1ZSA9IGFkZEV4dHJhUGFyYWdyYXBoKGRhdGEudmFsdWUpO1xuICAgICAgICAkZWxlbWVudC52YWx1ZSA9IGRhdGEudmFsdWU7XG4gICAgICAgIGVkaXRvckluc3RhbmNlID0gbmV3IE1lZGl1bUVkaXRvcigkZWxlbWVudCk7XG5cbiAgICAgICAgZWRpdG9ySW5zdGFuY2Uuc3Vic2NyaWJlKCdlZGl0YWJsZUlucHV0Jywgc2VuZFVwZGF0ZSk7XG5cbiAgICAgICAgaWYgKCRjb250ZW50Q3NzLnZhbHVlICE9PSAnJykge1xuICAgICAgICAgICAgZWRpdG9ySW5zdGFuY2UuZWxlbWVudHNbMF0uY2xhc3NOYW1lICs9ICcgJyArICRjb250ZW50Q3NzLnZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgJCgkZWxlbWVudCkubWVkaXVtSW5zZXJ0KHtcbiAgICAgICAgICAgIGVkaXRvcjogZWRpdG9ySW5zdGFuY2UsXG4gICAgICAgICAgICBhZGRvbnM6IHtcbiAgICAgICAgICAgICAgICBpbWFnZXM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVtYmVkczogZmFsc2UsXG4gICAgICAgICAgICAgICAgb3JjaGFyZE1lZGlhOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGhhc0luaXQgPSB0cnVlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBQcm9jZXNzIG1lc3NhZ2UgZnJvbSB0aGUgcGFyZW50IHdpbmRvdy5cbiAgICAgKi9cbiAgICB2YXIgb25NZXNzYWdlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKGUuZGF0YSk7XG5cbiAgICAgICAgaW5zdGFuY2VJZCA9IGRhdGEuaWQ7XG5cbiAgICAgICAgaWYgKGRhdGEuYWN0aW9uID09PSAndXBkYXRlJykge1xuICAgICAgICAgICAgcmVjZWl2ZWRVcGRhdGUoZGF0YSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVjZWl2ZXMgYSBtZXNzYWdlIGZyb20gcGFyZW50IHdpbmRvdyB0byB1cGRhdGUgdmFsdWUuXG4gICAgICovXG4gICAgdmFyIHJlY2VpdmVkVXBkYXRlID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgaWYgKCFoYXNJbml0KSB7XG4gICAgICAgICAgICBpbml0aWFsaXNlKGRhdGEpO1xuICAgICAgICAgICAgc2V0Rm9jdXMoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGRhdGEudmFsdWUgPSBhZGRFeHRyYVBhcmFncmFwaChkYXRhLnZhbHVlKTtcblxuICAgICAgICBlZGl0b3JJbnN0YW5jZS5zZXRDb250ZW50KGRhdGEudmFsdWUpO1xuICAgICAgICBzZXRGb2N1cygpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZW5kcyBtZXNzYWdlIHRvIHBhcmVudCB3aW5kb3cuXG4gICAgICovXG4gICAgdmFyIHNlbmRNZXNzYWdlID0gZnVuY3Rpb24gKG1zZykge1xuICAgICAgICB3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKG1zZywgJyonKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2VuZHMgbWVzc2FnZSB0byBwYXJlbnQgd2luZG93IHRvIHVwZGF0ZSB2YWx1ZS5cbiAgICAgKi9cbiAgICB2YXIgc2VuZFVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc2VuZE1lc3NhZ2Uoe1xuICAgICAgICAgICAgYWN0aW9uOiAndXBkYXRlJyxcbiAgICAgICAgICAgIGlkOiBpbnN0YW5jZUlkLFxuICAgICAgICAgICAgdmFsdWU6IGdldFZhbHVlKClcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNldCBmb2N1cyBvbiBtZWRpdW0gZWRpdG9yXG4gICAgICovXG4gICAgdmFyIHNldEZvY3VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZighZWRpdG9ySW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGVkaXRvckluc3RhbmNlLnNlbGVjdEVsZW1lbnQoZWRpdG9ySW5zdGFuY2UuZWxlbWVudHNbMF0pO1xuICAgICAgICBNZWRpdW1FZGl0b3Iuc2VsZWN0aW9uLm1vdmVDdXJzb3IoZG9jdW1lbnQsIGVkaXRvckluc3RhbmNlLmVsZW1lbnRzWzBdLCAwKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQWRkIGV4dHJhIHBhcmFncmFwaCBpZiBuZWVkZWRcbiAgICAgKi9cbiAgICB2YXIgYWRkRXh0cmFQYXJhZ3JhcGggPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgaWYodmFsdWUubGVuZ3RoID4gMCAmJiAhdmFsdWUuZW5kc1dpdGgoJzwvcD4nKSkge1xuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZSArICc8cD48YnIgLz48L3A+JztcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIFxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBjYWNoZURvbSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBvbk1lc3NhZ2UpO1xufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
