/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

(function () {
    var KEY_ESC = 27,
        UPLOAD_MEDIA_URL = '/Admin/Editor/Media';

    var editorInstance,
        $element;

    /**
     * Store DOM elements in variables.
     */
    var cacheDom = function () {
        $element = document.querySelector('.js-editor-medium-element');
    };

    /**
     * Checks if the user has keyed `ESC` to trigger the editor closing.
     */
    var checkKeyPressForHide = function (e) {
        if (e.keyCode === KEY_ESC) {
            hide();
        }
    };

    /**
     * Destroys the instance of medium editor.
     */
    var destroy = function () {
        editorInstance.destroy();
        editorInstance = undefined;

        window.removeEventListener('keydown', checkKeyPressForHide);
    };

    /**
     * Gets the value.
     */
    var getValue = function () {
        return editorInstance.serialize()[editorInstance.elements[0].id].value;
    };

    /**
     * Hides the medium editor
     */
    var hide = function () {
        sendMessage({
            action: 'close',
            value: getValue()
        });
    };
    
    /**
     * Initialises Medium editor.
     */
    var initialise = function (data) {
        window.addEventListener('keydown', checkKeyPressForHide);

        $element.value = data.value;
        editorInstance = new MediumEditor($element);

        $($element).mediumInsert({
            editor: editorInstance,
            addons: {
                images: {
                    fileUploadOptions: {
                        url: UPLOAD_MEDIA_URL,
                        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                        formData: [{
                            name: 'MediaPath',
                            value: data.mediaPath
                        }]
                    }
                }
            }
        });
    };

    /**
     * Process message from the parent window.
     */
    var onMessage = function (e) {
        var data = JSON.parse(e.data);

        if (data.action === 'initialise') {
            initialise(data);
        }

        if (data.action === 'destroy') {
            destroy();
        }
    };

    /**
     * Sends message to parent window.
     */
    var sendMessage = function (msg) {
        window.parent.postMessage(msg, '*');
    };
    
    document.addEventListener('DOMContentLoaded', cacheDom);
    window.addEventListener('message', onMessage);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yY2hhcmQubWVkaXVtLmVtYmVkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxBQUxBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoib3JjaGFyZC5tZWRpdW0uZW1iZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIEtFWV9FU0MgPSAyNyxcclxuICAgICAgICBVUExPQURfTUVESUFfVVJMID0gJy9BZG1pbi9FZGl0b3IvTWVkaWEnO1xyXG5cclxuICAgIHZhciBlZGl0b3JJbnN0YW5jZSxcclxuICAgICAgICAkZWxlbWVudDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFN0b3JlIERPTSBlbGVtZW50cyBpbiB2YXJpYWJsZXMuXHJcbiAgICAgKi9cclxuICAgIHZhciBjYWNoZURvbSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5qcy1lZGl0b3ItbWVkaXVtLWVsZW1lbnQnKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3MgaWYgdGhlIHVzZXIgaGFzIGtleWVkIGBFU0NgIHRvIHRyaWdnZXIgdGhlIGVkaXRvciBjbG9zaW5nLlxyXG4gICAgICovXHJcbiAgICB2YXIgY2hlY2tLZXlQcmVzc0ZvckhpZGUgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGlmIChlLmtleUNvZGUgPT09IEtFWV9FU0MpIHtcclxuICAgICAgICAgICAgaGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZXN0cm95cyB0aGUgaW5zdGFuY2Ugb2YgbWVkaXVtIGVkaXRvci5cclxuICAgICAqL1xyXG4gICAgdmFyIGRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZWRpdG9ySW5zdGFuY2UuZGVzdHJveSgpO1xyXG4gICAgICAgIGVkaXRvckluc3RhbmNlID0gdW5kZWZpbmVkO1xyXG5cclxuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGNoZWNrS2V5UHJlc3NGb3JIaWRlKTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSB2YWx1ZS5cclxuICAgICAqL1xyXG4gICAgdmFyIGdldFZhbHVlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBlZGl0b3JJbnN0YW5jZS5zZXJpYWxpemUoKVtlZGl0b3JJbnN0YW5jZS5lbGVtZW50c1swXS5pZF0udmFsdWU7XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGlkZXMgdGhlIG1lZGl1bSBlZGl0b3JcclxuICAgICAqL1xyXG4gICAgdmFyIGhpZGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VuZE1lc3NhZ2Uoe1xyXG4gICAgICAgICAgICBhY3Rpb246ICdjbG9zZScsXHJcbiAgICAgICAgICAgIHZhbHVlOiBnZXRWYWx1ZSgpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIEluaXRpYWxpc2VzIE1lZGl1bSBlZGl0b3IuXHJcbiAgICAgKi9cclxuICAgIHZhciBpbml0aWFsaXNlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGNoZWNrS2V5UHJlc3NGb3JIaWRlKTtcclxuXHJcbiAgICAgICAgJGVsZW1lbnQudmFsdWUgPSBkYXRhLnZhbHVlO1xyXG4gICAgICAgIGVkaXRvckluc3RhbmNlID0gbmV3IE1lZGl1bUVkaXRvcigkZWxlbWVudCk7XHJcblxyXG4gICAgICAgICQoJGVsZW1lbnQpLm1lZGl1bUluc2VydCh7XHJcbiAgICAgICAgICAgIGVkaXRvcjogZWRpdG9ySW5zdGFuY2UsXHJcbiAgICAgICAgICAgIGFkZG9uczoge1xyXG4gICAgICAgICAgICAgICAgaW1hZ2VzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlsZVVwbG9hZE9wdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBVUExPQURfTUVESUFfVVJMLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NlcHRGaWxlVHlwZXM6IC8oXFwufFxcLykoZ2lmfGpwZT9nfHBuZykkL2ksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1EYXRhOiBbe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ01lZGlhUGF0aCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZGF0YS5tZWRpYVBhdGhcclxuICAgICAgICAgICAgICAgICAgICAgICAgfV1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQcm9jZXNzIG1lc3NhZ2UgZnJvbSB0aGUgcGFyZW50IHdpbmRvdy5cclxuICAgICAqL1xyXG4gICAgdmFyIG9uTWVzc2FnZSA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKGUuZGF0YSk7XHJcblxyXG4gICAgICAgIGlmIChkYXRhLmFjdGlvbiA9PT0gJ2luaXRpYWxpc2UnKSB7XHJcbiAgICAgICAgICAgIGluaXRpYWxpc2UoZGF0YSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoZGF0YS5hY3Rpb24gPT09ICdkZXN0cm95Jykge1xyXG4gICAgICAgICAgICBkZXN0cm95KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFNlbmRzIG1lc3NhZ2UgdG8gcGFyZW50IHdpbmRvdy5cclxuICAgICAqL1xyXG4gICAgdmFyIHNlbmRNZXNzYWdlID0gZnVuY3Rpb24gKG1zZykge1xyXG4gICAgICAgIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UobXNnLCAnKicpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGNhY2hlRG9tKTtcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgb25NZXNzYWdlKTtcclxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
